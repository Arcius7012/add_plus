#Область ОписаниеПеременных

Перем КонтекстЯдра;
Перем Утверждения;
Перем УтвержденияПроверкаТаблиц;

#КонецОбласти

#Область ПрограммныйИнтерфейс

#Область ИнтерфейсТестирования

Функция КлючНастройки() Экспорт
	
	Возврат Метаданные().Имя; 
	
КонецФункции

Процедура Инициализация(КонтекстЯдраПараметр, НастройкиВходящие = Неопределено) Экспорт
	
	КонтекстЯдра = КонтекстЯдраПараметр;
	Утверждения = КонтекстЯдра.Плагин("БазовыеУтверждения");
	
	ЗагрузитьНастройки(НастройкиВходящие);
	
КонецПроцедуры

Процедура ЗаполнитьНаборТестов(НаборТестов, КонтекстЯдраПараметр, НастройкиВходящие = Неопределено) Экспорт
	
	КонтекстЯдра = КонтекстЯдраПараметр;
	
	ЗагрузитьНастройки(НастройкиВходящие);
	
	НаборТестов.НачатьГруппу("Объекты к сортировке");
	
	Если Не НужноВыполнятьТест() Тогда
		НаборТестов.НачатьГруппу("Пропуск теста", Ложь);
		
		ПараметрыТеста = НаборТестов.ПараметрыТеста("Тест пропущен по настройке");
		НаборТестов.Добавить("ПропуститьТест", ПараметрыТеста, "Пропуск теста");		
		Возврат;
	КонецЕсли;
	
	НаборДляКонтроля = Новый Массив;
	НаборДляКонтроля.Добавить("Подсистемы");
	НаборДляКонтроля.Добавить("ОбщиеМодули");
	НаборДляКонтроля.Добавить("ПараметрыСеанса");
	НаборДляКонтроля.Добавить("Роли");
	НаборДляКонтроля.Добавить("ПланыОбмена");
	НаборДляКонтроля.Добавить("ПодпискиНаСобытия");
	НаборДляКонтроля.Добавить("РегламентныеЗадания");
	НаборДляКонтроля.Добавить("ФункциональныеОпции");
	НаборДляКонтроля.Добавить("ОпределяемыеТипы");
	НаборДляКонтроля.Добавить("ОбщиеКоманды");
	НаборДляКонтроля.Добавить("ГруппыКоманд");
	НаборДляКонтроля.Добавить("ОбщиеФормы");
	НаборДляКонтроля.Добавить("ОбщиеМакеты");
	НаборДляКонтроля.Добавить("ОбщиеКартинки");
	НаборДляКонтроля.Добавить("ПакетыXDTO");
	НаборДляКонтроля.Добавить("WebСервисы");
	НаборДляКонтроля.Добавить("HTTPСервисы");
	НаборДляКонтроля.Добавить("WSСсылки");
	НаборДляКонтроля.Добавить("ЭлементыСтиля");
	НаборДляКонтроля.Добавить("Константы");
	НаборДляКонтроля.Добавить("Справочники");
	НаборДляКонтроля.Добавить("Документы");
	НаборДляКонтроля.Добавить("ЖурналыДокументов");
	НаборДляКонтроля.Добавить("Перечисления");
	НаборДляКонтроля.Добавить("Отчеты");
	НаборДляКонтроля.Добавить("Обработки");
	НаборДляКонтроля.Добавить("ПланыВидовХарактеристик");
	НаборДляКонтроля.Добавить("РегистрыСведений");
	НаборДляКонтроля.Добавить("РегистрыНакопления");
	
	ПредставлениеТеста = "Проверка сортировки группы - %1";
	
	Для Каждого Тест Из НаборДляКонтроля Цикл	
		ПараметрыТеста = НаборТестов.ПараметрыТеста(Тест, Настройки.Направление, Настройки.Исключения);
		НаборТестов.Добавить("Тест_ПроверкаСортировкиОбъектов", ПараметрыТеста, СтрШаблон(ПредставлениеТеста, Тест));
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область Тесты

Процедура ПередЗапускомТеста() Экспорт
	
КонецПроцедуры

Процедура ПослеЗапускаТеста() Экспорт
	
КонецПроцедуры

Процедура Тест_ПроверкаСортировкиОбъектов(ИмяМетаданного, Направление, Исключения) Экспорт
	
	ИсходныйСписок = Новый СписокЗначений;
	
	Для Каждого элМетаданных Из Метаданные[ИмяМетаданного] Цикл
		Если элМетаданных.РасширениеКонфигурации() = Неопределено
			И Исключения.Найти(элМетаданных.ПолноеИмя()) = Неопределено Тогда
			ИсходныйСписок.Добавить(элМетаданных.Имя);
		КонецЕсли;
	КонецЦикла;	

	СортированныйСписок = ИсходныйСписок.Скопировать();	
	СортированныйСписок.СортироватьПоЗначению(НаправлениеСортировки[Направление]);
	
	СортировкаСовпадает = Истина;
	ПервыйЭлемент = "";
	
	ТекИндекс = 0;
	Для Каждого элМетаданных Из ИсходныйСписок Цикл
		элСравнение = СортированныйСписок.Получить(ТекИндекс);
		
		Если элСравнение.Значение <> элМетаданных.Значение Тогда
			СортировкаСовпадает = Ложь;
			ПервыйЭлемент = элСравнение.Значение; 
			Прервать;
		КонецЕсли;
		
		ТекИндекс = ТекИндекс + 1;			
	КонецЦикла;	
	
	
	Утверждения.Проверить(СортировкаСовпадает, СтрШаблон("Элементы не отсортированы (начиная с %1)", ПервыйЭлемент));
	
КонецПроцедуры

Процедура ПропуститьТест(Знач ПричинаПропускаТеста) Экспорт
	КонтекстЯдра.ПропуститьТест(ПричинаПропускаТеста);
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Настройки

Процедура ЗагрузитьНастройки(НастройкиВходящие = Неопределено)
	
	Если ЗначениеЗаполнено(Настройки) Тогда
		Возврат;
	КонецЕсли;

    Настройки = НастройкиВходящие;
	
	НастройкиПоУмолчанию = НастройкиПоУмолчанию();
    Если ТипЗнч(Настройки) <> Тип("Структура") Then
        Настройки = НастройкиПоУмолчанию;
	Иначе
		ЗаполнитьЗначенияСвойств(НастройкиПоУмолчанию, Настройки);
        Настройки = НастройкиПоУмолчанию;
	КонецЕсли;
	
КонецПроцедуры

Функция НастройкиПоУмолчанию()
	
	Результат = Новый Структура;
	
	Результат.Вставить("Используется", 	Истина);
	Результат.Вставить("Направление", 	"Возр");
	Результат.Вставить("Исключения", 	Новый Массив);
	
	Возврат Результат;
	
КонецФункции

Функция НужноВыполнятьТест()
	
	Если Не ЗначениеЗаполнено(Настройки) Тогда
		Возврат Истина;
	КонецЕсли;
	
	ВыполнятьТест = Истина;
	Если ТипЗнч(Настройки) = Тип("Структура") 
		И Настройки.Свойство("Используется", ВыполнятьТест) Тогда
		Возврат ВыполнятьТест = Истина;	
	КонецЕсли;
	
	Возврат Истина;

КонецФункции

#КонецОбласти

#КонецОбласти
