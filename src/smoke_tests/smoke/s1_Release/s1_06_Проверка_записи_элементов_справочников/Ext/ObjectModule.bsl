#Область ОписаниеПеременных

Перем КонтекстЯдра;
Перем Утверждения;
Перем УтвержденияПроверкаТаблиц;

#КонецОбласти

#Область ПрограммныйИнтерфейс

#Область ИнтерфейсТестирования

Функция КлючНастройки()
	Если Не ЗначениеЗаполнено(ИмяТеста) Тогда
		ИмяТеста = Метаданные().Имя;
	КонецЕсли;
	
	Возврат ИмяТеста;
КонецФункции

Процедура Инициализация(КонтекстЯдраПараметр, НастройкиВходящие = Неопределено) Экспорт // add_plus
	
	КонтекстЯдра = КонтекстЯдраПараметр;
	Утверждения = КонтекстЯдра.Плагин("БазовыеУтверждения");
	
	ЗагрузитьНастройки(НастройкиВходящие); // add_plus
	
КонецПроцедуры

Процедура ЗаполнитьНаборТестов(НаборТестов, КонтекстЯдраПараметр, НастройкиВходящие = Неопределено) Экспорт // add_plus
	
	КонтекстЯдра = КонтекстЯдраПараметр;
	
	ЗагрузитьНастройки(НастройкиВходящие); // add_plus
	
	Если Не НужноВыполнятьТест() Тогда
		// add_plus
		НаборТестов.НачатьГруппу("Пропуск теста", Ложь);
		
		ПараметрыТеста = НаборТестов.ПараметрыТеста("Тест пропущен по настройке");
		НаборТестов.Добавить("ПропуститьТест", ПараметрыТеста, "Пропуск теста");
		// add_plus
		
		Возврат;
	КонецЕсли;
	
	// add_plus Исключения
	Для Каждого МетаОбъект Из Метаданные.Справочники Цикл
		Если ПравоДоступа("Изменение", МетаОбъект) Тогда
			
			Если СтрНачинаетсяС(НРег(МетаОбъект.Имя), "удалить") Тогда
				Продолжить;
			КонецЕсли;
			
			Если Настройки.Исключения.Найти(МетаОбъект.Имя) <> Неопределено Тогда
				Продолжить;
			КонецЕсли;
			
			ДобавитьТестыДляСправочника(НаборТестов, МетаОбъект);
		КонецЕсли; 
	КонецЦикла;
	// add_plus
	
КонецПроцедуры

Функция КлючНастройкиУстаревший()
	Возврат "ЗаписьЭлементовСправочников";
КонецФункции

#КонецОбласти

#Область Тесты

Процедура ПередЗапускомТеста() Экспорт
	
	НачатьТранзакцию();
	
КонецПроцедуры

Процедура ПослеЗапускаТеста() Экспорт
	
	Если ТранзакцияАктивна() Тогда
	    ОтменитьТранзакцию();
	КонецЕсли;
	
КонецПроцедуры

Процедура Тест_ЗаписатьЭлементСправочника(СправочникСсылка) Экспорт
	
	ЭлементОбъект = СправочникСсылка.ПолучитьОбъект();
	ЭлементОбъект.Записать();
	
КонецПроцедуры

// add_plus
Процедура ПропуститьТест(Знач ПричинаПропускаТеста) Экспорт
	КонтекстЯдра.ПропуститьТест(ПричинаПропускаТеста);
КонецПроцедуры // add_plus

Процедура Тест_ПропуститьЗаписьЭлементаСправочника(Знач Сообщение) Экспорт
	
	КонтекстЯдра.ПропуститьТест(Сообщение);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Настройки

Процедура ЗагрузитьНастройки(НастройкиВходящие = Неопределено) // add_plus
	
	Если ЗначениеЗаполнено(Настройки) Тогда
		Возврат;
	КонецЕсли;

   	Настройки = НастройкиВходящие; // add_plus
	
	НастройкиПоУмолчанию = НастройкиПоУмолчанию();
    Если ТипЗнч(Настройки) <> Тип("Структура") Then
        Настройки = НастройкиПоУмолчанию;
	Иначе
		ЗаполнитьЗначенияСвойств(НастройкиПоУмолчанию, Настройки);
        Настройки = НастройкиПоУмолчанию;
	КонецЕсли;
	
КонецПроцедуры

Функция НастройкиПоУмолчанию()
	
	Результат = Новый Структура;
	
	Результат.Вставить("Используется", Истина);
	Результат.Вставить("КоличествоПервыхЭлементов", 2);
	Результат.Вставить("КоличествоПоследнихЭлементов", 2);
	Результат.Вставить("Исключения", Новый Массив);
	Результат.Вставить("ВыводитьИсключения", Ложь);
	Результат.Вставить("Префикс", "");
	Результат.Вставить("ОтборПоПрефиксу", Ложь);
	
	// add_plus
	Результат.Исключения.Добавить("ИдентификаторыОбъектовМетаданных");
	Результат.Исключения.Добавить("ИдентификаторыОбъектовРасширений");
	Результат.Исключения.Добавить("ПредопределенныеВариантыОтчетов"); 
	// add_plus
	
	Возврат Результат;
КонецФункции

Функция НужноВыполнятьТест()
	
	// add_plus
	// ЗагрузитьНастройки();
	// add_plus
	
	Если Не ЗначениеЗаполнено(Настройки) Тогда
		Возврат Истина;
	КонецЕсли;
	
	// add_plus
	// КлючНастройки = КлючНастройки();
	// add_plus
	
	ВыполнятьТест = Истина;
	Если ТипЗнч(Настройки) = Тип("Структура")
		И Настройки.Свойство("Используется", ВыполнятьТест) Тогда
		
		Возврат ВыполнятьТест = Истина;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

#КонецОбласти

Процедура ДобавитьТестыДляСправочника(НаборТестов, МетаОбъект)

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ &КоличествоПервыхЭлементов
	|	Ссылка
	|ПОМЕСТИТЬ вт_Первые
	|ИЗ
	|	Справочник." + МетаОбъект.Имя + "
	|ГДЕ
	// add_plus
	// |	НЕ ЭтоГруппа И Не Предопределенный И Не ПометкаУдаления 
	|	НЕ ЭтоГруппа
	|		И НЕ ПометкаУдаления
	|		И ИмяПредопределенныхДанных = """"
	// add_plus
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ &КоличествоПоследнихЭлементов
	|	Ссылка
	|ПОМЕСТИТЬ вт_Последние
	|ИЗ
	|	Справочник." + МетаОбъект.Имя + "
	|ГДЕ 
	// add_plus
	// |	НЕ ЭтоГруппа И Не Предопределенный И Не ПометкаУдаления
	|	НЕ ЭтоГруппа
	|		И НЕ ПометкаУдаления
	|		И ИмяПредопределенныхДанных = """"
	// add_plus
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка УБЫВ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	вт_Первые.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ вт_Все
	|ИЗ
	|	вт_Первые КАК вт_Первые
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	вт_Последние.Ссылка
	|ИЗ
	|	вт_Последние КАК вт_Последние;
	|
	|ВЫБРАТЬ
	|	вт_Все.Ссылка,
	|   ПРЕДСТАВЛЕНИЕ(вт_Все.Ссылка) КАК Представление
	|ИЗ
	|	вт_Все КАК вт_Все";

	Запрос.Текст = СтрЗаменить(Запрос.Текст, 
								"ВЫБРАТЬ ПЕРВЫЕ &КоличествоПервыхЭлементов", 
								"ВЫБРАТЬ ПЕРВЫЕ " + Формат(Настройки.КоличествоПервыхЭлементов, "ЧГ=")
								);	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, 
								"ВЫБРАТЬ ПЕРВЫЕ &КоличествоПоследнихЭлементов", 
								"ВЫБРАТЬ ПЕРВЫЕ " + Формат(Настройки.КоличествоПоследнихЭлементов, "ЧГ=")
								);
	Если НЕ МетаОбъект.Иерархический 
		ИЛИ МетаОбъект.ВидИерархии <> Метаданные.СвойстваОбъектов.ВидИерархии.ИерархияГруппИЭлементов Тогда
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "НЕ ЭтоГруппа", "ИСТИНА");
	КонецЕсли;
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;	
	КонецЕсли; 
	
	ПредставлениеТеста = "Проверка записи элемента справочника - " + МетаОбъект.Имя;
	Сообщение = "Пропускаем из-за исключения по имени справочника - " + ПредставлениеТеста; 
	ЭтоИсключение = Ложь;
	
	Если КонтекстЯдра.ЕстьВИсключаемойКоллекции(МетаОбъект.Имя, Настройки.Исключения) Тогда
		КонтекстЯдра.Отладка(Сообщение); 
		
		Если Не Настройки.ВыводитьИсключения Тогда
		    Возврат;
		КонецЕсли;	
		
		ЭтоИсключение = Истина;
	КонецЕсли;
	
	НаборТестов.НачатьГруппу(МетаОбъект.Синоним + " - Справочник."  + МетаОбъект.Имя);
		
	Если ЭтоИсключение Тогда
		ПараметрыТеста = НаборТестов.ПараметрыТеста(Сообщение);
		НаборТестов.Добавить("Тест_ПропуститьЗаписьЭлементаСправочника", ПараметрыТеста, Сообщение);
	Иначе
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			ПараметрыТеста = НаборТестов.ПараметрыТеста(Выборка.Ссылка);
			ПредставлениеТеста = СтрШаблон("Проверка записи элемента справочника - %1", Выборка.Представление);
			
			НаборТестов.Добавить("Тест_ЗаписатьЭлементСправочника", ПараметрыТеста, ПредставлениеТеста);			
		КонецЦикла; 
	КонецЕсли;	

КонецПроцедуры

Функция ИмяТеста()
	
	Возврат Метаданные().Имя;
	
КонецФункции

#КонецОбласти