#Область ОписаниеПеременных

&НаКлиенте
Перем КонтекстЯдра, Утверждения, СтроковыеУтилиты;
&НаКлиенте
Перем ИсключенияИзПроверок, ВыводитьИсключения;
&НаКлиенте
Перем Префикс;

#КонецОбласти

#Область ИнтерфейсТестирования

&НаКлиенте
Процедура Инициализация(КонтекстЯдраПараметр) Экспорт
	
	КонтекстЯдра 		= КонтекстЯдраПараметр;
	Утверждения 		= КонтекстЯдра.Плагин("БазовыеУтверждения");
	СтроковыеУтилиты 	= КонтекстЯдра.Плагин("СтроковыеУтилиты");
	
	Настройки(КонтекстЯдра, ИмяТеста());
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьНаборТестов(НаборТестов, КонтекстЯдраПараметр) Экспорт
	
	Инициализация(КонтекстЯдраПараметр);
	
	Если Не ВыполнятьТест(КонтекстЯдра) Тогда
		НаборТестов.НачатьГруппу("Пропуск теста", Ложь);
		
		ПараметрыТеста = НаборТестов.ПараметрыТеста("Тест пропущен по настройке");
		НаборТестов.Добавить("ПропуститьТест", ПараметрыТеста, "Пропуск теста");
		
		Возврат;
	КонецЕсли;
	
	ОбъектыКПроверке = ПолучитьСписокОбъектовДляКонтроля(Префикс);
	
	Для Каждого ВидОбъекта Из ОбъектыКПроверке Цикл
		
		МассивТестов = УбратьИсключения(ВидОбъекта.Тесты);
		
		Если МассивТестов.Количество() Тогда	
			НаборТестов.НачатьГруппу(ВидОбъекта.ИмяМетаданных, Истина);
			
			Для Каждого Тест Из МассивТестов Цикл
				
				ИмяПроцедуры = "ТестДолжен_ПроверитьОсновныеФормыОбъекта";
				ИмяТеста = КонтекстЯдра.СтрШаблон_("%1 [%2]", Тест.ПолноеИмя, НСтр("ru = 'Проверка основных форм объекта'")); 
				НаборТестов.Добавить(ИмяПроцедуры, НаборТестов.ПараметрыТеста(Тест.ПолноеИмя), ИмяТеста);
				
			КонецЦикла;
		КонецЕсли;
	
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область РаботаСНастройками

&НаКлиенте
Процедура Настройки(КонтекстЯдра, Знач ПутьНастройки)

	Если ЗначениеЗаполнено(Объект.Настройки) Тогда
		Возврат;
	КонецЕсли;
		
	Префикс = "";	
	ВыводитьИсключения = Истина;
	ИсключенияИзПроверок = Новый Соответствие;
	
	ПлагинНастроек 		= КонтекстЯдра.Плагин("Настройки");
	Объект.Настройки 	= ПлагинНастроек.ПолучитьНастройку(ПутьНастройки);
	Настройки 			= Объект.Настройки;
	
	Если Не ЗначениеЗаполнено(Настройки) Тогда
		Объект.Настройки = Новый Структура(ПутьНастройки, Неопределено);
		Возврат;
	КонецЕсли;
	
	Если Настройки.Свойство("Префикс") Тогда
		Префикс = Настройки.Префикс;		
	КонецЕсли;
		
	Если Настройки.Свойство("ВыводитьИсключения") Тогда
		ВыводитьИсключения = Настройки.ВыводитьИсключения;
	КонецЕсли;
	
	Если Настройки.Свойство("ИсключенияИзПроверок") Тогда
		ИсключенияИзПроверок(Настройки);
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ИсключенияИзПроверок(Настройки)
	
	Для Каждого ИсключенияИзПроверокПоОбъектам Из Настройки.ИсключенияИзПроверок Цикл		
		
		Для Каждого ИсключениеИзПроверок Из ИсключенияИзПроверокПоОбъектам.Значение Цикл
			ИсключенияИзПроверок.Вставить(ВРег(ИсключенияИзПроверокПоОбъектам.Ключ + "." + ИсключениеИзПроверок), Истина);			
		КонецЦикла;
	КонецЦикла;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПропуститьТест(Знач ПричинаПропускаТеста) Экспорт
	КонтекстЯдра.ПропуститьТест(ПричинаПропускаТеста);
КонецПроцедуры

#КонецОбласти

#Область Тесты

&НаКлиенте
Процедура ТестДолжен_ПроверитьОсновныеФормыОбъекта(ПолноеИмяМетаданных) Экспорт
		
	ПропускатьТест = ПропускатьТест(ПолноеИмяМетаданных);
	
	Результат = ПроверитьФормыОбъекта(ПолноеИмяМетаданных, Префикс);
	Если Результат <> "" И ПропускатьТест.Пропустить Тогда
		Утверждения.ПропуститьТест(ТекстСообщения(ПолноеИмяМетаданных));
	Иначе
		Утверждения.Проверить(Результат = "", ТекстСообщения(Результат));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ПроверитьФормыОбъекта(ПолноеИмяМетаданных, Префикс)
	
	Результат = "";
	ПроверитьФорму(Результат, ПолноеИмяМетаданных, "ФормаОбъекта", 	Префикс);
	ПроверитьФорму(Результат, ПолноеИмяМетаданных, "ФормаСписка", 	Префикс);
	ПроверитьФорму(Результат, ПолноеИмяМетаданных, "ФормаВыбора", 	Префикс);
	
	Возврат Результат;

КонецФункции

&НаКлиенте
Процедура ПроверитьФорму(Результат, ПолноеИмяМетаданных, ИмяФормы, Префикс)
	 
	ФормыДляСравнения = НайтиФормы(ПолноеИмяМетаданных, ИмяФормы, Префикс);
	
	ОшибкаФормаЭталон = Ложь;
	ОшибкаФормыДляСравнения = Ложь;
	
	Если ФормыДляСравнения.ФормаЭталон = "" Тогда
		ОшибкаФормаЭталон = Истина;	
	КонецЕсли;
	
	Если ФормыДляСравнения.ФормаКПроверке = "" Тогда
		ОшибкаФормыДляСравнения = Истина;	
	КонецЕсли;
	
	Если ФормыДляСравнения.ФормаЭталон <> ""
		И ФормыДляСравнения.ФормаКПроверке <> "" Тогда
		
		ФормаЭталон = ПолучитьФорму(ФормыДляСравнения.ФормаЭталон);
		ФормаДляСравнения = ПолучитьФорму(ФормыДляСравнения.ФормаКПроверке);
		
		Если ФормаЭталон = Неопределено Тогда
			ОшибкаФормаЭталон = Истина;	
		КонецЕсли;
		
		Если ФормаДляСравнения = Неопределено Тогда
			ОшибкаФормыДляСравнения = Истина;
		КонецЕсли;
	КонецЕсли;	
	
	Если Не ОшибкаФормаЭталон
		И Не ОшибкаФормыДляСравнения Тогда
		
		ВерсияШаблона = Неопределено;
		ВерсияДляСравнения = Неопределено;
		Если ФормаЭталон.Параметры.Свойство("ВерсияШаблона", ВерсияШаблона) Тогда             
			Если Не ФормаДляСравнения.Параметры.Свойство("ВерсияШаблона", ВерсияДляСравнения) Тогда
				Разделитель = ?(ЗначениеЗаполнено(Результат), ",", "");
				ШаблонОшибки = НСтр("ru = '%1%2 в форму %3 не добавлен параметр версия шаблона'");
				Результат = СтроковыеУтилиты.ПодставитьПараметрыВСтроку(ШаблонОшибки, Результат, Разделитель, ИмяФормыДляВывода(ИмяФормы, ПолноеИмяМетаданных));		
			Иначе
				Если ВерсияШаблона <> ВерсияДляСравнения Тогда
					Разделитель = ?(ЗначениеЗаполнено(Результат), ",", "");
					ШаблонОшибки = НСтр("ru = '%1%2 форма %3 использует устаревшую версию шаблона. Текущая версия %4, требуется %5'");
					Результат = СтроковыеУтилиты.ПодставитьПараметрыВСтроку(ШаблонОшибки, Результат, Разделитель, ИмяФормыДляВывода(ИмяФормы, ПолноеИмяМетаданных),
						ВерсияДляСравнения, ВерсияШаблона);
				КонецЕсли;
			КонецЕсли;		 
		КонецЕсли;			
		
		ЭлементыДляСравнения = ФормаДляСравнения.Элементы;
		
		НеНашлиЭлементов = "";
		Для Каждого ЭлементФормы Из ФормаЭталон.Элементы Цикл
			Если СтрНайти(ЭлементФормы.Имя, "Код")
				И Не ФормыДляСравнения.ЕстьКод Тогда
				Продолжить;
			КонецЕсли;
			
			// Какой-то артефакт
			Если СтрНайти(ЭлементФормы.Имя, "1") <> 0 Тогда
				Продолжить;
			КонецЕсли;
			
			Если СтрНайти(ЭлементФормы.Имя, "РасширеннаяПодсказка") = 0
				И Не ЭлементФормы.Видимость Тогда
				Продолжить;
			КонецЕсли;
			
			// Документ не проводится
			Если ЭлементФормы.Имя = "ФормаПровестиИЗакрыть"
				Или ЭлементФормы.Имя = "ФормаОтменаПроведения"
				Или ЭлементФормы.Имя = "ФормаПровести"
				Или ЭлементФормы.Имя = "ФормаПроведение" Тогда
				
				Если Не ФормыДляСравнения.Проведение Тогда
					Продолжить;
				КонецЕсли;
			КонецЕсли;
			
			// опционально должно быть включено
			Если ЭлементФормы.Имя = "ФормаСоздать"
				Или ЭлементФормы.Имя = "ФормаСкопировать" Тогда
				Продолжить;
			КонецЕсли;
			
			Если СтрНайти(ЭлементФормы.Имя, "РасширеннаяПодсказка")
				Или СтрНайти(ЭлементФормы.Имя, "КонтекстноеМеню")
				Или СтрНайти(ЭлементФормы.Имя, "ФормаПоказатьВСписке")
				Или СтрНачинаетсяС(ЭлементФормы.Имя, "ИТК_")
				Или ЭлементФормы.Имя = "ФормаИсторияИзменений" Тогда
				Продолжить;
			КонецЕсли;
			
			ПоискЭлемента = ЭлементыДляСравнения.Найти(ЭлементФормы.Имя); 
			
			Если ПоискЭлемента = Неопределено Тогда
				НеНашлиЭлементов = НеНашлиЭлементов + ?(НеНашлиЭлементов = "", "", ",") + ЭлементФормы.Имя;			
			КонецЕсли;					
		КонецЦикла;
		
		Если ИмяФормы = "ФормаСписка"
			Или ИмяФормы = "ФормаВыбора" Тогда
			ПоискСсылки = ЭлементыДляСравнения.Найти("Ссылка");
			
			Если ПоискСсылки <> Неопределено Тогда
				Если ПоискСсылки.Видимость = Ложь Тогда
					Разделитель = ?(ЗначениеЗаполнено(Результат), ",", "");
					ШаблонОшибки = НСтр("ru = '%1%2 на форме %3 не включена видимость ссылки (требуется отключить пользовательскую видимость)'");
					Результат = СтроковыеУтилиты.ПодставитьПараметрыВСтроку(ШаблонОшибки, Результат, Разделитель, ИмяФормыДляВывода(ИмяФормы, ПолноеИмяМетаданных));	
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		ПолеКомментарий = ЭлементыДляСравнения.Найти("Комментарий");
		Если ИмяФормы = "ФормаОбъекта" И ПолеКомментарий <> Неопределено Тогда
			Если ПолеКомментарий.КнопкаВыбора <> Истина Тогда
				Разделитель = ?(ЗначениеЗаполнено(Результат), ",", "");
				ШаблонОшибки = НСтр("ru = '%1%2 на форме %3 не настроено редактирование комментария.'");
				Результат = СтроковыеУтилиты.ПодставитьПараметрыВСтроку(ШаблонОшибки, Результат, Разделитель, ИмяФормыДляВывода(ИмяФормы, ПолноеИмяМетаданных));	
			КонецЕсли;
		КонецЕсли;
		
		Если НеНашлиЭлементов <> "" Тогда
			Разделитель = ?(ЗначениеЗаполнено(Результат), ",", "");
			ШаблонОшибки = НСтр("ru = '%1%2 на форму %3 не перенесены элементы: %4 из шаблона'");
			Результат = СтроковыеУтилиты.ПодставитьПараметрыВСтроку(ШаблонОшибки, Результат, Разделитель, ИмяФормыДляВывода(ИмяФормы, ПолноеИмяМетаданных), НеНашлиЭлементов);
		КонецЕсли;
		
		ОбязательныйРеквизит = "ПараметрыПодключаемыхКоманд";
		Если Не ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ФормаДляСравнения, ОбязательныйРеквизит) Тогда
			Разделитель = ?(ЗначениеЗаполнено(Результат), ",", "");
			ШаблонОшибки = НСтр("ru = '%1%2 на форму %3 не перенесен обязательный реквизит %4 из шаблона'");
			Результат = СтроковыеУтилиты.ПодставитьПараметрыВСтроку(ШаблонОшибки, Результат, Разделитель, ИмяФормыДляВывода(ИмяФормы, ПолноеИмяМетаданных), ОбязательныйРеквизит);	
		КонецЕсли; 
						
	КонецЕсли;
	
	Если ОшибкаФормаЭталон Тогда
		Разделитель = ?(ЗначениеЗаполнено(Результат), ",", "");
		ШаблонОшибки = НСтр("ru = '%1%2 не корректно указан шаблон для формы %3'");
		Результат = СтроковыеУтилиты.ПодставитьПараметрыВСтроку(ШаблонОшибки, Результат, Разделитель, ИмяФормыДляВывода(ИмяФормы, ПолноеИмяМетаданных));	
	КонецЕсли;
	
	Если ОшибкаФормыДляСравнения Тогда
		Разделитель = ?(ЗначениеЗаполнено(Результат), ",", "");
		ШаблонОшибки = НСтр("ru = '%1%2 не указана форма %3 (возможно установлен Отказ при создании на сервере)'");
		Результат = СтроковыеУтилиты.ПодставитьПараметрыВСтроку(ШаблонОшибки, Результат, Разделитель, ИмяФормыДляВывода(ИмяФормы, ПолноеИмяМетаданных));	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ИмяФормыДляВывода(ИмяФормы, ПолноеИмяМетаданных)
	
	Если ИмяФормы = "ФормаОбъекта" Тогда
		
		Если СтрНачинаетсяС(ПолноеИмяМетаданных, "Справочник") Тогда
			Возврат "элемента";
		Иначе
			Возврат "документа";
		КонецЕсли;
		
	ИначеЕсли ИмяФормы = "ФормаСписка" Тогда
		Возврат "списка";
	Иначе
		Возврат "выбора";
	КонецЕсли;
	
КонецФункции

&НаСервереБезКонтекста
Функция НайтиФормы(ПолноеИмяМетаданных, ИмяФормы, Префикс)

	Ответ = Новый Структура;
	
	ОбъектКПроверке = Метаданные.НайтиПоПолномуИмени(ПолноеИмяМетаданных);
		
	Если СтрНачинаетсяС(ПолноеИмяМетаданных, "Справочник") Тогда
		ИмяДляПоиска = "Справочник." + Префикс + "Шаблон";
		
		Ответ.Вставить("ЕстьКод", ОбъектКПроверке.ДлинаКода <> 0);
		Ответ.Вставить("Проведение", Ложь);
	Иначе
		ИмяДляПоиска = "Документ." + Префикс + "Шаблон";
		Ответ.Вставить("ЕстьКод", Ложь);
		Ответ.Вставить("Проведение", ОбъектКПроверке.Проведение = Метаданные.СвойстваОбъектов.Проведение.Разрешить);
	КонецЕсли;
	
	ОбъектЭталон = Метаданные.НайтиПоПолномуИмени(ИмяДляПоиска);
	
	Если ИмяФормы = "ФормаОбъекта" Тогда
		ФормаКПроверке = ОбъектКПроверке.ОсновнаяФормаОбъекта;
		ФормаЭталон = ОбъектЭталон.ОсновнаяФормаОбъекта;
	ИначеЕсли ИмяФормы = "ФормаСписка" Тогда
		ФормаКПроверке = ОбъектКПроверке.ОсновнаяФормаСписка;
		ФормаЭталон = ОбъектЭталон.ОсновнаяФормаСписка;
	Иначе
		ФормаКПроверке = ОбъектКПроверке.ОсновнаяФормаДляВыбора;
		ФормаЭталон = ОбъектЭталон.ОсновнаяФормаСписка;
	КонецЕсли;
	
	Если ФормаЭталон = Неопределено Тогда
		Ответ.Вставить("ФормаЭталон", "");	
	Иначе
		Ответ.Вставить("ФормаЭталон", ФормаЭталон.ПолноеИмя());
	КонецЕсли;
	
	Если ФормаКПроверке = Неопределено Тогда
		Ответ.Вставить("ФормаКПроверке", "");	
	Иначе
		Ответ.Вставить("ФормаКПроверке", ФормаКПроверке.ПолноеИмя());
	КонецЕсли;
	
	Возврат Ответ;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Функция ПропускатьТест(ПолноеИмяМетаданных)

	Результат = Новый Структура;
	Результат.Вставить("ТекстСообщения", "");
	Результат.Вставить("Пропустить", Ложь);
		
	Если ИсключенИзПроверок(ВРег(ПолноеИмяМетаданных)) Тогда
		ШаблонСообщения = НСтр("ru = '""%1"" исключен из проверки.'");
		Результат.ТекстСообщения = СтроковыеУтилиты.ПодставитьПараметрыВСтроку(ШаблонСообщения, ПолноеИмяМетаданных);
		Результат.Пропустить = Истина;
		Возврат Результат;
	КонецЕсли;
			
	Возврат Результат;

КонецФункции 

&НаКлиенте
Функция ИсключенИзПроверок(ПолноеИмяМетаданных)
	
	Результат = Ложь;
	МассивСтрокИмени = СтроковыеУтилиты.РазложитьСтрокуВМассивПодстрок(ПолноеИмяМетаданных, ".");
	ИсключениеВсехОбъектов = СтроковыеУтилиты.ПодставитьПараметрыВСтроку("%1.*", МассивСтрокИмени[0]);
	
	Если ИсключенияИзПроверок.Получить(ВРег(ПолноеИмяМетаданных)) <> Неопределено
	 Или ИсключенияИзПроверок.Получить(ВРег(ИсключениеВсехОбъектов)) <> Неопределено Тогда
		Результат = Истина;	
	КонецЕсли;
	
	Если СтрНайти(ПолноеИмяМетаданных, "ПрисоединенныеФайлы") Тогда
		Результат = Истина;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Функция УбратьИсключения(МассивТестов)

	Результат = Новый Массив;
	
	Для Каждого Тест Из МассивТестов Цикл
		Если Не ИсключенИзПроверок(Тест.ПолноеИмя) Тогда
			Результат.Добавить(Тест);
		КонецЕсли;	
	КонецЦикла;
	
	Возврат Результат;

КонецФункции

&НаКлиенте
Функция ТекстСообщения(Результат)	
	
	ШаблонСообщения = НСтр("ru = 'Тест не пройден: %1.'");
	ТекстСообщения = СтроковыеУтилиты.ПодставитьПараметрыВСтроку(ШаблонСообщения, Результат);
	
	Возврат ТекстСообщения;

КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ИмяСодержитПрефикс(Имя, Префикс)
	
	Если Не ЗначениеЗаполнено(Префикс) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ДлинаПрефикса = СтрДлина(Префикс);
	Возврат СтрНайти(Лев(Имя, ДлинаПрефикса), Префикс) > 0;
	
КонецФункции

&НаКлиенте
Функция ИмяТеста()
	
	Если Не ЗначениеЗаполнено(Объект.ИмяТеста) Тогда
		Объект.ИмяТеста = ИмяТестаНаСервере();
	КонецЕсли;
	
	Возврат Объект.ИмяТеста;
	
КонецФункции

&НаСервере
Функция ИмяТестаНаСервере()
	Возврат РеквизитФормыВЗначение("Объект").Метаданные().Имя;
КонецФункции

&НаКлиенте
Функция ВыполнятьТест(КонтекстЯдра)
	
	ВыполнятьТест = Ложь;
	Настройки(КонтекстЯдра, ИмяТеста());
	Настройки = Объект.Настройки;
	
	Если Не ЗначениеЗаполнено(Настройки) Тогда
		Возврат ВыполнятьТест;
	КонецЕсли;
		
	Если ТипЗнч(Настройки) = Тип("Структура") 
		И Настройки.Свойство("Используется") Тогда
		
		ВыполнятьТест = Настройки.Используется;	
	КонецЕсли;
	
	Возврат ВыполнятьТест;

КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьСписокОбъектовДляКонтроля(Префикс)

	Результат = Новый Массив;

	ПолучитьОбъектыПоМетаданным(Результат, "Справочник", Метаданные.Справочники, Префикс);
	ПолучитьОбъектыПоМетаданным(Результат, "Документ", Метаданные.Документы, Префикс);
	
	Возврат Результат;
	
КонецФункции

&НаСервереБезКонтекста
Процедура ПолучитьОбъектыПоМетаданным(Результат, ИмяМетаданных, СписокМетаданных, Префикс)
	
	СписокОбъектов = Новый Массив;
	Для Каждого ОбъектМД Из СписокМетаданных Цикл
		Если Не ИмяСодержитПрефикс(ОбъектМД.Имя, Префикс) Тогда
			Продолжить;
		КонецЕсли;
		
		Если ОбъектМД.Имя = "Шаблон" + Префикс Тогда
			Продолжить;
		КонецЕсли;
		
		Если СтрНачинаетсяС(ОбъектМД.Имя, "Удалить") Тогда
			Продолжить;
		КонецЕсли;
			
		СтруктураОбъекта = Новый Структура;
		СтруктураОбъекта.Вставить("Имя", 		ОбъектМД.Имя);
		СтруктураОбъекта.Вставить("Синоним", 	ОбъектМД.Синоним);
		СтруктураОбъекта.Вставить("ПолноеИмя", 	ОбъектМД.ПолноеИмя());
		
		СписокОбъектов.Добавить(СтруктураОбъекта); 		
	КонецЦикла;
	
	Если СписокОбъектов.Количество() Тогда
		Результат.Добавить(Новый Структура("ИмяМетаданных, Тесты", ИмяМетаданных, СписокОбъектов)); 	
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти