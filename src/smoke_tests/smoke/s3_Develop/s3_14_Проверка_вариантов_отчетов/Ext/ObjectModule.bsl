#Область ОписаниеПеременных

Перем КонтекстЯдра;
Перем Утверждения;
Перем УтвержденияПроверкаТаблиц;

#КонецОбласти

#Область ПрограммныйИнтерфейс

#Область ИнтерфейсТестирования

Функция КлючНастройки() Экспорт
	
	Возврат Метаданные().Имя;
	
КонецФункции

Процедура Инициализация(КонтекстЯдраПараметр, НастройкиВходящие = Неопределено) Экспорт
	
	КонтекстЯдра = КонтекстЯдраПараметр;
	Утверждения = КонтекстЯдра.Плагин("БазовыеУтверждения");
	
	ЗагрузитьНастройки(НастройкиВходящие);
	
КонецПроцедуры

Процедура ЗаполнитьНаборТестов(НаборТестов, КонтекстЯдраПараметр, НастройкиВходящие = Неопределено) Экспорт
	
	КонтекстЯдра = КонтекстЯдраПараметр;
	
	ЗагрузитьНастройки(НастройкиВходящие);
	
	Если Не НужноВыполнятьТест() Тогда
		НаборТестов.НачатьГруппу("Пропуск теста", Ложь);
		
		ПараметрыТеста = НаборТестов.ПараметрыТеста("Тест пропущен по настройке");
		НаборТестов.Добавить("ПропуститьТест", ПараметрыТеста, "Пропуск теста");
		
		Возврат;
	КонецЕсли; 
	
	ЕстьТесты = Ложь;
	
	ОписанияВариантов = ВариантыОтчетов.ПредопределенныеВариантыОтчетов();	
	АдресВариантов = ПоместитьВоВременноеХранилище(ОписанияВариантов, Новый УникальныйИдентификатор);
	
	ПредставлениеТеста = "Проверка макета %1 - %2";
	
	// Нужно модифицировать, если будем раскоменчивать
	
	//Запрос = Новый Запрос;
	//Запрос.УстановитьПараметр("Исключения", Настройки.Исключения);
	//Запрос.Текст =
	//"ВЫБРАТЬ
	//|	ДополнительныеОтчетыИОбработки.Наименование КАК Наименование,
	//|	""Внешний отчет"" КАК ДляИмениТеста,
	//|	ДополнительныеОтчетыИОбработки.Ссылка КАК Ссылка
	//|ИЗ
	//|	Справочник.ДополнительныеОтчетыИОбработки КАК ДополнительныеОтчетыИОбработки
	//|ГДЕ
	//|	НЕ ДополнительныеОтчетыИОбработки.ПометкаУдаления
	//|	И ДополнительныеОтчетыИОбработки.Публикация = ЗНАЧЕНИЕ(Перечисление.ВариантыПубликацииДополнительныхОтчетовИОбработок.Используется)
	//|	И ДополнительныеОтчетыИОбработки.Вид = ЗНАЧЕНИЕ(Перечисление.ВидыДополнительныхОтчетовИОбработок.ДополнительныйОтчет)
	//|	И НЕ ДополнительныеОтчетыИОбработки.Наименование В (&Исключения)";
	//
	//Выборка = Запрос.Выполнить().Выбрать();
	//
	//НаборТестов.НачатьГруппу("Внешние отчеты");
	//
	//Пока Выборка.Следующий() Цикл
	//	ПараметрыТеста = НаборТестов.ПараметрыТеста(Выборка.Ссылка);
	//	НаименованиеТеста = СтрШаблон(ПредставлениеТеста, Выборка.ДляИмениТеста, Выборка.Наименование);
	//	НаборТестов.Добавить("Тест_ПроверкаМакетаОтчета", ПараметрыТеста, НаименованиеТеста);	
	//КонецЦикла;
	
	НаборТестов.НачатьГруппу("Внутренние отчеты");
	
	Для каждого Отчет Из Метаданные.Отчеты Цикл
		
		Если Не СтрНачинаетсяС(НРег(Отчет.Имя), Настройки.Префикс)
			Или Настройки.Исключения.Найти(Отчет.Синоним) <> Неопределено
			ИЛИ Отчет.ОсновнаяСхемаКомпоновкиДанных = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		ПараметрыТеста = НаборТестов.ПараметрыТеста(Новый Структура("Тип, Отчет, ОписанияВариантов", "Внутренний", Отчет.Имя, АдресВариантов));
		НаименованиеТеста = СтрШаблон(ПредставлениеТеста, "Внутренний отчет", Отчет.Синоним);
		НаборТестов.Добавить("Тест_ПроверкаМакетаОтчета", ПараметрыТеста, НаименованиеТеста); 
		
		ЕстьТесты = Истина;	
	КонецЦикла; 
	
	Если Не ЕстьТесты Тогда
		НаборТестов.НачатьГруппу("Пропуск теста", Ложь);
		
		ПараметрыТеста = НаборТестов.ПараметрыТеста("Отсутствуют тестовые данные");
		НаборТестов.Добавить("ПропуститьТест", ПараметрыТеста, "Пропуск теста");	
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область Тесты

Процедура ПередЗапускомТеста() Экспорт
	
КонецПроцедуры

Процедура ПослеЗапускаТеста() Экспорт
	
КонецПроцедуры

Процедура Тест_ПроверкаМакетаОтчета(ПараметрыТеста) Экспорт
		
	Если ПараметрыТеста.Тип = "Внутренний" Тогда 
		
		Отчет = Метаданные.Отчеты[ПараметрыТеста.Отчет];		
		СхемаКомпоновкиДанныхИмя = Отчет.ОсновнаяСхемаКомпоновкиДанных.Имя;
		
		СхемаКомпоновкиДанных = Отчеты[ПараметрыТеста.Отчет].ПолучитьМакет(СхемаКомпоновкиДанныхИмя);
		
		ТекстОшибки = "";
		
		Если Отчет.ИспользоватьСтандартныеКоманды Тогда
			ТекстОшибки = "Для отчета не снят флаг ""Использование стандартных команд""";	
		КонецЕсли; 
		
		Если Отчет.ХранилищеВариантов = Неопределено Тогда
			ТекстОшибки = ТекстОшибки + ?(ТекстОшибки = "", "", Символы.ПС) + "Для отчета не указано хранилище вариантов";	
		КонецЕсли;
		
		Если Отчет.ХранилищеНастроек <> Неопределено Тогда
			ТекстОшибки = ТекстОшибки + ?(ТекстОшибки = "", "", Символы.ПС) + "Для отчета указано лишнее хранилище настроек";	
		КонецЕсли;
				
		Для каждого Вариант Из СхемаКомпоновкиДанных.ВариантыНастроек Цикл
			
			Если Вариант.Представление = "Основной" Тогда
				ТекстОшибки = ТекстОшибки + ?(ТекстОшибки = "", "", Символы.ПС) + "Представление варианта отчета ""Основной""";
			КонецЕсли;
			
			Если Вариант.Имя = "Основной" Тогда
				ТекстОшибки = ТекстОшибки + ?(ТекстОшибки = "", "", Символы.ПС) + "Имя варианта отчета ""Основной""";
			КонецЕсли;
			
			Попытка
				ОписанияВариантов = ПолучитьИзВременногоХранилища(ПараметрыТеста.ОписанияВариантов);		
				
				ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(ОписанияВариантов, Отчет, Вариант.Имя); 			
			Исключение
				ОписаниеВарианта = Неопределено;			
				ТекстОшибки = ТекстОшибки + ?(ТекстОшибки = "", "", Символы.ПС) + СтрШаблон("Вариант отчета ""%1"" не найден в общем списке вариантов отчета", Вариант.Представление);				
			КонецПопытки;
			
			Если ОписаниеВарианта <> Неопределено
				И ОписаниеВарианта.Описание = "" Тогда
				ТекстОшибки = ТекстОшибки + ?(ТекстОшибки = "", "", Символы.ПС) + СтрШаблон("Для варианта отчета ""%1"" не заполнено описание", Вариант.Представление);			
			КонецЕсли;
		КонецЦикла;	
		
		Утверждения.Проверить(ТекстОшибки = "", ТекстОшибки);		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПропуститьТест(Знач ПричинаПропускаТеста) Экспорт
	КонтекстЯдра.ПропуститьТест(ПричинаПропускаТеста);
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Настройки

Процедура ЗагрузитьНастройки(НастройкиВходящие)
	
	Если ЗначениеЗаполнено(Настройки) Тогда
		Возврат;
	КонецЕсли;

    Настройки = НастройкиВходящие;
	
	НастройкиПоУмолчанию = НастройкиПоУмолчанию();
    Если ТипЗнч(Настройки) <> Тип("Структура") Then
        Настройки = НастройкиПоУмолчанию;
	Иначе
		ЗаполнитьЗначенияСвойств(НастройкиПоУмолчанию, Настройки);
        Настройки = НастройкиПоУмолчанию;
	КонецЕсли;
	
КонецПроцедуры

Функция НастройкиПоУмолчанию()
	
	Результат = Новый Структура;
	
	Результат.Вставить("Используется", 	Ложь);
	Результат.Вставить("Исключения", 	Новый Массив);
	Результат.Вставить("Префикс",		"");
	
	Возврат Результат;
	
КонецФункции

Функция НужноВыполнятьТест()
	
	Если Не ЗначениеЗаполнено(Настройки) Тогда
		Возврат Истина;
	КонецЕсли;
	
	ВыполнятьТест = Истина;
	Если ТипЗнч(Настройки) = Тип("Структура") 
		И Настройки.Свойство("Используется", ВыполнятьТест) Тогда
		Возврат ВыполнятьТест = Истина;	
	КонецЕсли;
	
	Возврат Истина;

КонецФункции

#КонецОбласти

#КонецОбласти
